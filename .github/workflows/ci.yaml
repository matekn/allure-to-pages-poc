name: Build, Test, and Deploy Allure Report
permissions:
  id-token: write
  repository-projects: write
  contents: write

  
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test-and-report:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Run tests and generate Allure results
      - name: Run Tests
        run: npm test

      # Generate Allure Report
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          allure_history: allure-history
          allure_results: allure-results
          allure_report: allure-report/allure-report-${{ github.run_number }}
      - name: list all files in the directory
        shell: bash
        run: |
         ls -R
      - name: Fix permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: uplad allure report to artifactory
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report/allure-report-${{ github.run_number }}
          name: allure-report-${{github.run_number}}
   # Deployment job  
  deploy:
    environment:
      name: upload-to-pages
      url: ${{ steps.deployment.outputs.page_url }}allure-report-${{github.run_number}}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pages: write
    needs: test-and-report
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: allure-report-${{github.run_number}}
      - name: Get artifact ID
        id: artifact_info
        run: |
            artifact_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
              jq -r '.artifacts[0].id')
            echo "artifact_id=$artifact_id" >> $GITHUB_ENV
      - name: Download reports.json using GitHub API
        run: |
            curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -o artifact.zip \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{env.artifact_id}}/zip"
      - name: Extract the ZIP file
        run: unzip artifact.zip -d extracted_artifacts/
      - name: list all files in the directory
        shell: bash
        run: |
         ls -R
      - name: Access reports.json
        run: |
           # Assuming `reports.json` is located inside `extracted_artifacts/`
           if [ -f "extracted_artifacts/reports.json" ]; then
             cp extracted_artifacts/reports.json .
           else
             echo "reports.json not found inside the artifact."
           fi
      - name: Update JSON file with new report link
        run: |
          if [ -f "reports.json" ]; then
            cp reports.json reports.json.bak
          else
            echo '{"reports": []}' > reports.json
          fi
          
          new_report="allure-report-36"
          
          # Ensure that the URL is treated as a string with proper escaping
          jq --arg new_report "https://$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/$new_report/" \
            '.reports += [$new_report]' reports.json > temp.json && mv temp.json reports.json

      - name: Upload reports.json as artifact
        run: |
               curl -X POST \
               -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               -H "Content-Type: application/json" \
               --data-binary @reports.json \
               "https://api.github.com/repos/${{ github.repository }}/actions/artifacts"